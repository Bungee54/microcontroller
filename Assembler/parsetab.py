
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA INSTRUCTION LABEL_DEF LABEL_REF NUMBER REGISTERline : LABEL_DEF INSTRUCTION operandlistline : INSTRUCTION operandlistline : INSTRUCTIONoperandlist : operandlist COMMA operandoperandlist : operandoperand : REGISTERoperand : NUMBERoperand : LABEL_REF'
    
_lr_action_items = {'LABEL_DEF':([0,],[2,]),'INSTRUCTION':([0,2,],[3,4,]),'$end':([1,3,5,6,7,8,9,10,12,],[0,-3,-2,-5,-6,-7,-8,-1,-4,]),'REGISTER':([3,4,11,],[7,7,7,]),'NUMBER':([3,4,11,],[8,8,8,]),'LABEL_REF':([3,4,11,],[9,9,9,]),'COMMA':([5,6,7,8,9,10,12,],[11,-5,-6,-7,-8,11,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,],[1,]),'operandlist':([3,4,],[5,10,]),'operand':([3,4,11,],[6,6,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> LABEL_DEF INSTRUCTION operandlist','line',3,'p_line_labeldef_instruction_operandlist','asm_parser.py',34),
  ('line -> INSTRUCTION operandlist','line',2,'p_line_instruction_operandlist','asm_parser.py',38),
  ('line -> INSTRUCTION','line',1,'p_line_instruction','asm_parser.py',42),
  ('operandlist -> operandlist COMMA operand','operandlist',3,'p_operandlist_comma_operand','asm_parser.py',46),
  ('operandlist -> operand','operandlist',1,'p_operandlist_operand','asm_parser.py',51),
  ('operand -> REGISTER','operand',1,'p_operand_register','asm_parser.py',55),
  ('operand -> NUMBER','operand',1,'p_operand_number','asm_parser.py',59),
  ('operand -> LABEL_REF','operand',1,'p_operand_labelref','asm_parser.py',63),
]
