TOKEN SPECIFICATION
** ORDER MATTERS; EVALUATED TOP DOWN **

Token              Specification (in English)
-----------        -----------------------------------------------
INSTRUCTION        All capital letters matching an instruction from 
                   a given set of instructions strings. Cannot end 
                   in a digit or colon (':'). 
                   Ex.      'ADD', 'SUB', 'HALT'
                   Non Ex.  'ADD3', 'SUB:'

LABEL_DEF          All lowercase letters and numbers, but must begin
                   with a lowercase letter. Cannot begin with a
                   lowercase 'r' followed by a digit. Ends in ':'.
                   Must appear at the beginning of a line.
                   Used to define a label somewhere in the program.
                   Ex.      'label1:', 'test:'
                   Non Ex.  'label1', '1label:', 'r2:'

LABEL_REF          Follows rules for LABEL_DEF, but has no ':' and
                   is surrounded in '<' and '>' angled brackets.
                   Used to reference a label as an operand. 
                   Ex.      '<label1>', '<test>'
                   Non Ex.  'label1:', 'label1', '<r4>'
                  
REGISTER           Lowercase 'r' followed by a string of digits.
                   Must be followed by whitespace or a comma or
                   nothing.
                   Ex.      'r1', 'r12'
                   Non Ex.  'rs', 'R1'     

NUMBER             String of digits not preceded or followed by
                   a letter. May begin with '0x', in which case
                   the letters a-f or A-F are allowed and
                   the number is interpreted in hexadecimal. 
                   Ex.      '1456', '0x38fd'
                   Non Ex.  '38fd', '0x38gd'

COMMA              The character ','. 